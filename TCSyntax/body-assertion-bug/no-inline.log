[Warning ] warning: there were two feature warnings; re-run with -feature for details
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: false
[  Info  ]  => VALID
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: ∀x$96: A, x$97: A. thiss.combine.pre(x$96, x$97) && ¬thiss.combine.pre(thiss.empty, x)
[  Info  ]  => VALID
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: ∀x$96: A, x$97: A. thiss.combine.pre(x$96, x$97) && ∀x: A. (thiss.combine.f(thiss.empty, x) == x) && ¬thiss.combine.pre(x, thiss.empty)
[  Info  ]  => VALID
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: false
[  Info  ]  => VALID
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: false
[  Info  ]  => VALID
[  Info  ]  - Now considering 'lambda precondition' VC for inv @?:?...
[ Debug  ] instExpr: false
[  Info  ]  => VALID
[  Info  ]  - Now considering 'body assertion' VC for natPlusPseudoMonoid @?:?...
[ Debug  ] instExpr: ¬∀x: Nat. lemma_leftIdentityZeroPlus(x) || ¬∀x: Nat. lemma_rightIdentityZeroPlus(x)
[  Info  ]  => VALID
[  Info  ]  - Now considering 'adt invariant' VC for natPlusPseudoMonoid @?:?...
[ Debug  ] instExpr: ∀x: Nat. lemma_leftIdentityZeroPlus(x) && ∀x: Nat. lemma_rightIdentityZeroPlus(x) && {
[ Debug  ]   val thiss: PseudoMonoid[Nat] = PseudoMonoid[Nat](Zero(), fun2[Nat, Nat, Nat]((x$1: Nat, x$2: Nat) => +(x$1, x$2), (x$1: Nat, x$2: Nat) => true))
[ Debug  ]   ¬∀x$244: Nat, x$245: Nat. thiss.combine.pre(x$244, x$245) || ¬∀x: Nat. (thiss.combine.f(thiss.empty, x) == x) || ¬∀x: Nat. (thiss.combine.f(x, thiss.empty) == x)
[ Debug  ] }
[Warning ]  => TIMEOUT
[  Info  ]  - Now considering 'postcond. (ind. on n: Nat / Succ)' VC for lemma_leftIdentityZeroPlus @?:?...
[ Debug  ] instExpr: n.isInstanceOf[Succ] && +(Zero(), n.asInstanceOf[Succ].n) == n.asInstanceOf[Succ].n && +(Zero(), n) ≠ n
[  Info  ]  => VALID
[  Info  ]  - Now considering 'postcond. (ind. on n: Nat / Zero)' VC for lemma_leftIdentityZeroPlus @?:?...
[ Debug  ] instExpr: n.isInstanceOf[Zero] && +(Zero(), n) ≠ n
[  Info  ]  => VALID
[  Info  ]  - Now considering 'postcond. (ind. on n: Nat / Succ)' VC for lemma_rightIdentityZeroPlus @?:?...
[ Debug  ] instExpr: n.isInstanceOf[Succ] && +(n.asInstanceOf[Succ].n, Zero()) == n.asInstanceOf[Succ].n && +(n, Zero()) ≠ n
[  Info  ]  => VALID
[  Info  ]  - Now considering 'postcond. (ind. on n: Nat / Zero)' VC for lemma_rightIdentityZeroPlus @?:?...
[ Debug  ] instExpr: n.isInstanceOf[Zero] && +(n, Zero()) ≠ n
[  Info  ]  => VALID
[  Info  ]  - Now considering 'match exhaustiveness' VC for + @?:?...
[ Debug  ] instExpr: false
[  Info  ]  => VALID
[  Info  ]   ┌──────────────────────┐
[  Info  ] ╔═╡ Verification Summary ╞══════════════════════════════════════════════════════════════════════════╗
[  Info  ] ║ └──────────────────────┘                                                                          ║
[  Info  ] ║ +                            match exhaustiveness               ?:?  valid      nativez3  0.051   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.064   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.023   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.755   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.024   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.167   ║
[  Info  ] ║ inv                          lambda precondition                ?:?  valid      nativez3  0.024   ║
[  Info  ] ║ lemma_leftIdentityZeroPlus   postcond. (ind. on n: Nat / Succ)  ?:?  valid      nativez3  0.041   ║
[  Info  ] ║ lemma_leftIdentityZeroPlus   postcond. (ind. on n: Nat / Zero)  ?:?  valid      nativez3  0.034   ║
[  Info  ] ║ lemma_rightIdentityZeroPlus  postcond. (ind. on n: Nat / Succ)  ?:?  valid      nativez3  0.041   ║
[  Info  ] ║ lemma_rightIdentityZeroPlus  postcond. (ind. on n: Nat / Zero)  ?:?  valid      nativez3  0.043   ║
[  Info  ] ║ natPlusPseudoMonoid          adt invariant                      ?:?  cancelled  nativez3  4.740   ║
[  Info  ] ║ natPlusPseudoMonoid          body assertion                     ?:?  valid      nativez3  0.433   ║
[  Info  ] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[  Info  ] ║ total: 13     valid: 12     invalid: 0      unknown: 1                                      6.440 ║
[  Info  ] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════╝
